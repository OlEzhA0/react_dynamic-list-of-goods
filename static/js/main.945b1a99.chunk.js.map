{"version":3,"sources":["components/Buttons.tsx","components/GoodsList.tsx","api/getElement.tsx","App.tsx","index.tsx"],"names":["Buttons","loadAll","loadFirstFive","loadRedGoods","className","type","onClick","GoodsList","goods","map","good","key","id","style","color","name","getData","URL","a","fetch","json","list","GetElement","App","state","isLoading","setState","then","finally","sortGoods","sort","b","localeCompare","slice","filteredGoods","filter","this","React","Component","ReactDOM","render","document","getElementById"],"mappings":"6OAmCeA,G,MA5BkB,SAAC,GAA8C,IAA5CC,EAA2C,EAA3CA,QAASC,EAAkC,EAAlCA,cAAeC,EAAmB,EAAnBA,aAC1D,OACE,yBAAKC,UAAU,aACb,4BACEA,UAAU,SACVC,KAAK,SACLC,QAAS,kBAAML,MAHjB,kBAOA,4BACEI,KAAK,SACLD,UAAU,SACVE,QAAS,kBAAMJ,MAHjB,sBAOA,4BACEE,UAAU,SACVC,KAAK,SACLC,QAAS,kBAAMH,MAHjB,qBCDSI,EAhBoB,SAAC,GAAe,IAAbC,EAAY,EAAZA,MACpC,OACE,4BACGA,EAAMC,KAAI,SAAAC,GAAI,OACb,wBACEC,IAAKD,EAAKE,GACVC,MAAO,CAAEC,MAAM,GAAD,OAAKJ,EAAKI,QACxBV,UAAU,QAETM,EAAKK,W,uBChBVC,EAAO,uCAAG,WAAOC,GAAP,iBAAAC,EAAA,sEACMC,MAAMF,GADZ,cACRT,EADQ,gBAEKA,EAAMY,OAFX,cAERC,EAFQ,yBAIPA,GAJO,2CAAH,sDAOAC,EAAU,uCAAG,sBAAAJ,EAAA,4DACZ,wEADY,kBAGjBF,EAFK,0EADY,2CAAH,qDCqERO,E,4MA/DbC,MAAe,CACbhB,MAAO,GACPiB,WAAW,G,EAGbxB,QAAU,WACR,EAAKyB,SAAS,CAAED,WAAW,IAE3BH,IACGK,MAAK,SAAAnB,GAAK,OAAI,EAAKkB,SAAS,CAAElB,aAC9BoB,SAAQ,WACP,EAAKF,SAAS,CAAED,WAAW,Q,EAIjCvB,cAAgB,WACd,EAAKwB,SAAS,CAAED,WAAW,IAE3BH,IACGK,MAAK,SAAAnB,GACJ,IAAMqB,EAAYrB,EAAMsB,MAAK,SAACZ,EAASa,GAAV,OAAsBb,EAAEH,KAAKiB,cAAcD,EAAEhB,SAE1E,EAAKW,SAAS,CAAElB,MAAOqB,EAAUI,MAAM,EAAG,QAE3CL,SAAQ,WACP,EAAKF,SAAS,CAAED,WAAW,Q,EAIjCtB,aAAe,WACb,EAAKuB,SAAS,CAAED,WAAW,IAE3BH,IACGK,MAAK,SAAAnB,GACJ,IAAM0B,EAAgB1B,EAAM2B,QAAO,SAACzB,GAAD,MAA+B,QAAfA,EAAKI,SAExD,EAAKY,SAAS,CAAElB,MAAO0B,OAExBN,SAAQ,WACP,EAAKF,SAAS,CAAED,WAAW,Q,uDAIvB,IAAD,EACsBW,KAAKZ,MAA1BhB,EADD,EACCA,MAAOiB,EADR,EACQA,UAEf,OACE,oCACE,kBAAC,EAAD,CACExB,QAASmC,KAAKnC,QACdC,cAAekC,KAAKlC,cACpBC,aAAciC,KAAKjC,eAEpBsB,EACC,yCAEA,kBAAC,EAAD,CAAWjB,MAAOA,S,GAzDV6B,IAAMC,WCRxBC,IAASC,OACP,kBAAC,EAAD,MACAC,SAASC,eAAe,U","file":"static/js/main.945b1a99.chunk.js","sourcesContent":["import React from 'react';\n\ninterface Props {\n  loadAll: () => void;\n  loadFirstFive: () => void;\n  loadRedGoods: () => void;\n}\nconst Buttons: React.FC<Props> = ({ loadAll, loadFirstFive, loadRedGoods }) => {\n  return (\n    <div className=\"container\">\n      <button\n        className=\"button\"\n        type=\"button\"\n        onClick={() => loadAll()}\n      >\n        Load All goods\n      </button>\n      <button\n        type=\"button\"\n        className=\"button\"\n        onClick={() => loadFirstFive()}\n      >\n        Load 5 first goods\n      </button>\n      <button\n        className=\"button\"\n        type=\"button\"\n        onClick={() => loadRedGoods()}\n      >\n        Load red goods\n      </button>\n    </div>\n  );\n};\n\nexport default Buttons;\n","import React from 'react';\nimport { Good } from './Interface';\n\ninterface Props {\n  goods: Good[];\n}\n\nconst GoodsList: React.FC<Props> = ({ goods }) => {\n  return (\n    <ul>\n      {goods.map(good => (\n        <li\n          key={good.id}\n          style={{ color: `${good.color}`, }}\n          className=\"item\"\n        >\n          {good.name}\n        </li>\n      ))}\n    </ul>\n  );\n};\n\nexport default GoodsList;\n","const getData = async (URL: string) => {\n  const goods = await fetch(URL);\n  const list = await goods.json();\n\n  return list;\n};\n\nexport const GetElement = async () => {\n  const URL = 'https://mate-academy.github.io/react_dynamic-list-of-goods/goods.json';\n\n  return getData(URL);\n};\n","import React from 'react';\nimport './App.css';\nimport Buttons from './components/Buttons';\nimport GoodsList from './components/GoodsList';\nimport { Good } from './components/Interface';\nimport { GetElement } from './api/getElement';\n\ninterface State {\n  goods: Good[];\n  isLoading: boolean;\n}\n\nclass App extends React.Component {\n  state: State = {\n    goods: [],\n    isLoading: false,\n  };\n\n  loadAll = () => {\n    this.setState({ isLoading: true });\n\n    GetElement()\n      .then(goods => this.setState({ goods }))\n      .finally(() => {\n        this.setState({ isLoading: false });\n      });\n  };\n\n  loadFirstFive = () => {\n    this.setState({ isLoading: true });\n\n    GetElement()\n      .then(goods => {\n        const sortGoods = goods.sort((a: Good, b: Good) => a.name.localeCompare(b.name));\n\n        this.setState({ goods: sortGoods.slice(0, 5) });\n      })\n      .finally(() => {\n        this.setState({ isLoading: false });\n      });\n  };\n\n  loadRedGoods = () => {\n    this.setState({ isLoading: true });\n\n    GetElement()\n      .then(goods => {\n        const filteredGoods = goods.filter((good: Good) => good.color === 'red');\n\n        this.setState({ goods: filteredGoods });\n      })\n      .finally(() => {\n        this.setState({ isLoading: false });\n      });\n  };\n\n  render() {\n    const { goods, isLoading } = this.state;\n\n    return (\n      <>\n        <Buttons\n          loadAll={this.loadAll}\n          loadFirstFive={this.loadFirstFive}\n          loadRedGoods={this.loadRedGoods}\n        />\n        {isLoading ? (\n          <p>Loading...</p>\n        ) : (\n          <GoodsList goods={goods} />\n        )}\n      </>\n    );\n  }\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\n\nReactDOM.render(\n  <App />,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}